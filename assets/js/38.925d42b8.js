(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{510:function(n,e,i){"use strict";i.r(e);var _=i(13),r=Object(_.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"реалізація-інформаціиного-та-програмного-забезпечення"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#реалізація-інформаціиного-та-програмного-забезпечення"}},[n._v("#")]),n._v(" Реалізація інформаційного та програмного забезпечення")]),n._v(" "),e("h2",{attrs:{id:"sql-скрипт-для-створення-на-початкового-наповнення-бази-даних"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql-скрипт-для-створення-на-початкового-наповнення-бази-даних"}},[n._v("#")]),n._v(" SQL-скрипт для створення на початкового наповнення бази даних")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema quiz\n-- -----------------------------------------------------\nDROP SCHEMA IF EXISTS `quiz` ;\n\n-- -----------------------------------------------------\n-- Schema quiz\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `quiz` DEFAULT CHARACTER SET utf8 ;\nUSE `quiz` ;\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Role`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Role` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Role` (\n`id` INT NOT NULL,\n`name` VARCHAR(32) NULL,\nPRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Permission`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Permission` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Permission` (\n`id` INT NOT NULL,\n`name` VARCHAR(32) NULL,\nPRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Grant`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Grant` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Grant` (\n`id` INT NOT NULL,\n`appointed` DATE NULL,\n`Role_id` INT NOT NULL,\n`Permission_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Role_id`, `Permission_id`),\nINDEX `fk_Grant_Role1_idx` (`Role_id` ASC) VISIBLE,\nINDEX `fk_Grant_Permission1_idx` (`Permission_id` ASC) VISIBLE,\nCONSTRAINT `fk_Grant_Role1`\nFOREIGN KEY (`Role_id`)\nREFERENCES `quiz`.`Role` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Grant_Permission1`\nFOREIGN KEY (`Permission_id`)\nREFERENCES `quiz`.`Permission` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`User`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`User` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`User` (\n`id` INT NOT NULL AUTO_INCREMENT,\n`first_name` VARCHAR(45) NULL,\n`last_name` VARCHAR(45) NULL,\n`nick_name` VARCHAR(45) NULL,\n`email` VARCHAR(128) NULL,\n`password` VARCHAR(64) NULL,\n`Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Role_id`),\nINDEX `fk_User_Role1_idx` (`Role_id` ASC) VISIBLE,\nUNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,\nUNIQUE INDEX `nick_name_UNIQUE` (`nick_name` ASC) VISIBLE,\nCONSTRAINT `fk_User_Role1`\nFOREIGN KEY (`Role_id`)\nREFERENCES `quiz`.`Role` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Survey`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Survey` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Survey` (\n`id` INT NOT NULL,\n`title` VARCHAR(45) NULL,\n`description` LONGTEXT NULL,\n`created` DATE NULL,\n`User_id` INT NOT NULL,\n`User_Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `User_id`, `User_Role_id`),\nINDEX `fk_Survey_User1_idx` (`User_id` ASC, `User_Role_id` ASC) VISIBLE,\nCONSTRAINT `fk_Survey_User1`\nFOREIGN KEY (`User_id` , `User_Role_id`)\nREFERENCES `quiz`.`User` (`id` , `Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Question`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Question` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Question` (\n`id` INT NOT NULL,\n`text` LONGTEXT NULL,\n`type` VARCHAR(32) NULL,\n`Survey_id` INT NOT NULL,\n`Survey_User_id` INT NOT NULL,\n`Survey_User_Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Survey_id`, `Survey_User_id`, `Survey_User_Role_id`),\nINDEX `fk_Question_Survey1_idx` (`Survey_id` ASC, `Survey_User_id` ASC, `Survey_User_Role_id` ASC) VISIBLE,\nCONSTRAINT `fk_Question_Survey1`\nFOREIGN KEY (`Survey_id` , `Survey_User_id` , `Survey_User_Role_id`)\nREFERENCES `quiz`.`Survey` (`id` , `User_id` , `User_Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Answer`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Answer` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Answer` (\n`id` INT NOT NULL,\n`text` LONGTEXT NULL,\n`User_id` INT NOT NULL,\n`User_Role_id` INT NOT NULL,\n`Question_id` INT NOT NULL,\n`Question_Survey_id` INT NOT NULL,\n`Question_Survey_User_id` INT NOT NULL,\n`Question_Survey_User_Role_id` INT NOT NULL,\nPRIMARY KEY (`id`, `User_id`, `User_Role_id`, `Question_id`, `Question_Survey_id`, `Question_Survey_User_id`, `Question_Survey_User_Role_id`),\nINDEX `fk_Answer_User1_idx` (`User_id` ASC, `User_Role_id` ASC) VISIBLE,\nINDEX `fk_Answer_Question1_idx` (`Question_id` ASC, `Question_Survey_id` ASC, `Question_Survey_User_id` ASC, `Question_Survey_User_Role_id` ASC) VISIBLE,\nCONSTRAINT `fk_Answer_User1`\nFOREIGN KEY (`User_id` , `User_Role_id`)\nREFERENCES `quiz`.`User` (`id` , `Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Answer_Question1`\nFOREIGN KEY (`Question_id` , `Question_Survey_id` , `Question_Survey_User_id` , `Question_Survey_User_Role_id`)\nREFERENCES `quiz`.`Question` (`id` , `Survey_id` , `Survey_User_id` , `Survey_User_Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`State`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`State` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`State` (\n`id` INT NOT NULL,\n`name` VARCHAR(32) NULL,\nPRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `quiz`.`Action`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `quiz`.`Action` ;\n\nCREATE TABLE IF NOT EXISTS `quiz`.`Action` (\n`id` INT NOT NULL,\n`date` DATE NULL,\n`Survey_id` INT NOT NULL,\n`Survey_User_id` INT NOT NULL,\n`Survey_User_Role_id` INT NOT NULL,\n`Role_id` INT NOT NULL,\n`State_id` INT NOT NULL,\nPRIMARY KEY (`id`, `Survey_id`, `Survey_User_id`, `Survey_User_Role_id`, `Role_id`, `State_id`),\nINDEX `fk_Action_Survey1_idx` (`Survey_id` ASC, `Survey_User_id` ASC, `Survey_User_Role_id` ASC) VISIBLE,\nINDEX `fk_Action_Role1_idx` (`Role_id` ASC) VISIBLE,\nINDEX `fk_Action_State1_idx` (`State_id` ASC) VISIBLE,\nCONSTRAINT `fk_Action_Survey1`\nFOREIGN KEY (`Survey_id` , `Survey_User_id` , `Survey_User_Role_id`)\nREFERENCES `quiz`.`Survey` (`id` , `User_id` , `User_Role_id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Action_Role1`\nFOREIGN KEY (`Role_id`)\nREFERENCES `quiz`.`Role` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION,\nCONSTRAINT `fk_Action_State1`\nFOREIGN KEY (`State_id`)\nREFERENCES `quiz`.`State` (`id`)\nON DELETE NO ACTION\nON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n")])])]),e("h2",{attrs:{id:"restfull-сервіс-для-управління-даними-на-базі-python-flask-для-таблиці-role"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restfull-сервіс-для-управління-даними-на-базі-python-flask-для-таблиці-role"}},[n._v("#")]),n._v(' RESTfull сервіс для управління даними на базі Python, Flask для таблиці "role"')]),n._v(" "),e("h3",{attrs:{id:"app-py"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#app-py"}},[n._v("#")]),n._v(" App.py")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('from flask import Flask, request, jsonify\nfrom flask_sqlalchemy import SQLAlchemy\n\napp = Flask(__name__)\napp.config[\'SQLALCHEMY_DATABASE_URI\'] = \'mysql://root:SQLpasswd1@localhost/quiz\'\ndb = SQLAlchemy(app)\n\nclass Role(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(32), nullable=False)\n\n    def __init__(self, id, name):\n        self.id = id\n        self.name = name\n\n"""Маршрут для отримання всіх ролей"""\n@app.route(\'/roles\', methods=[\'GET\'])\ndef get_roles():\n    roles = Role.query.all()\n\n    """Підготовка результату у вигляді JSON"""\n    result = [{\'id\': role.id, \'name\': role.name} for role in roles]\n    return jsonify(result)\n\n"""Маршрут для створення нової ролі"""\n@app.route(\'/roles\', methods=[\'POST\'])\ndef create_role():\n    data = request.get_json()\n    id = data.get(\'id\')\n    name = data.get(\'name\')\n\n    """Перевірка наявності ідентифікатора та імені у вхідних даних"""\n    if not id or not name:\n        return jsonify({\'error\': \'Ідентифікатор та ім`я обов`язкові\'}), 400\n\n    """Перевірка наявності ролі з вказаним ідентифікатором"""\n    existing_role = Role.query.filter_by(id=id).first()\n    if existing_role:\n        return jsonify({\'error\': f\'Роль з ідентифікатором {id} вже існує\'}), 409\n\n    """Перевірка наявності ролі з вказаним іменем"""\n    existing_role = Role.query.filter_by(name=name).first()\n    if existing_role:\n        return jsonify({\'error\': f\'Роль з іменем {name} вже існує\'}), 409\n\n    """Створення нової ролі та збереження у базі даних"""\n    new_role = Role(id=id, name=name)\n    db.session.add(new_role)\n    db.session.commit()\n\n    return jsonify({\'message\': f\'Роль з ідентифікатором {id} та іменем {name} створена успішно\'}), 201\n\n"""Маршрут для оновлення інформації про роль"""\n@app.route(\'/roles/<int:id>\', methods=[\'PUT\'])\ndef update_role(id):\n    role = Role.query.get(id)\n\n    """Перевірка існування ролі з вказаним ідентифікатором"""\n    if not role:\n        return jsonify({\'error\': f\'Роль з ідентифікатором {id} не знайдена\'}), 404\n\n    data = request.get_json()\n    name = data.get(\'name\')\n\n    """Перевірка наявності нового імені у вхідних даних"""\n    if not name:\n        return jsonify({\'error\': \'Ім`я обов`язкове\'}), 400\n\n    """Перевірка наявності ролі з вказаним іменем"""\n    existing_role = Role.query.filter(Role.name == name, Role.id != id).first()\n    if existing_role:\n        return jsonify({\'error\': f\'Роль з іменем {name} вже існує\'}), 409\n\n    """Оновлення імені ролі та збереження у базі даних"""\n    role.name = name\n    db.session.commit()\n\n    return jsonify({\'message\': f\'Роль з ідентифікатором {id} оновлена успішно, нове ім`я - {name}\'})\n\n"""Маршрут для видалення ролі"""\n@app.route(\'/roles/<int:id>\', methods=[\'DELETE\'])\ndef delete_role(id):\n    role = Role.query.get(id)\n\n    """Перевірка існування ролі з вказаним ідентифікатором"""\n    if not role:\n        return jsonify({\'error\': f\'Роль з ідентифікатором {id} не знайдена\'}), 404\n    role_name = role.name\n\n    """Видалення ролі з бази даних"""\n    db.session.delete(role)\n    db.session.commit()\n    return jsonify({\'message\': f\'Роль з ідентифікатором {id} та іменем {role_name} видалена успішно\'})\n\nif __name__ == \'__main__\':\n    app.run(debug=True)\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);